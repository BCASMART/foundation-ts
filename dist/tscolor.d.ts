import { Class, TSObject } from "./tsobject";
import { Comparison, StringDictionary, uint, uint8 } from "./types";
export declare const TSWebColorNames: StringDictionary;
export declare function $lighter(c: number): uint8;
export declare function $darker(c: number): uint8;
export declare function $lightest(c: number): uint8;
export declare function $darkest(c: number): uint8;
export declare class TSColor implements TSObject<TSColor> {
    red: uint8;
    green: uint8;
    blue: uint8;
    alpha: uint8;
    static readonly red: TSColor;
    static readonly green: TSColor;
    static readonly yellow: TSColor;
    static readonly blue: TSColor;
    static readonly cyan: TSColor;
    static readonly magenta: TSColor;
    static readonly white: TSColor;
    static readonly black: TSColor;
    static darkWriteColor: TSColor;
    static lightWriteColor: TSColor;
    constructor(stringColor: string);
    constructor(colorDefinition: number);
    constructor(r: number, g: number, b: number, a?: number);
    luminance(): number;
    isPale(): boolean;
    lighterColor(): TSColor;
    darkerColor(): TSColor;
    lightestColor(): TSColor;
    darkestColor(): TSColor;
    matchingColor(): TSColor;
    writingColor(): TSColor;
    toNumber(): number;
    toUnsigned(): uint;
    get isa(): Class<TSColor>;
    get className(): string;
    isEqual(other: any): boolean;
    compare(other: any): Comparison;
    toString(removeAlpha?: boolean): string;
    toJSON(): string;
    toArray(): uint8[];
}
